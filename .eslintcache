[{"C:\\Users\\derek\\Desktop\\BigBlueBadgeProjects\\blue-badge-client\\src\\index.js":"1","C:\\Users\\derek\\Desktop\\BigBlueBadgeProjects\\blue-badge-client\\src\\App.js":"2","C:\\Users\\derek\\Desktop\\BigBlueBadgeProjects\\blue-badge-client\\src\\Components\\Rating\\RatingCreate.jsx":"3","C:\\Users\\derek\\Desktop\\BigBlueBadgeProjects\\blue-badge-client\\src\\Components\\Auth\\Auth.jsx":"4","C:\\Users\\derek\\Desktop\\BigBlueBadgeProjects\\blue-badge-client\\src\\Components\\Auth\\Login.js":"5"},{"size":570,"mtime":1606784531519,"results":"6","hashOfConfig":"7"},{"size":1527,"mtime":1606846492867,"results":"8","hashOfConfig":"7"},{"size":1798,"mtime":1606846274541,"results":"9","hashOfConfig":"7"},{"size":2296,"mtime":1606847163393,"results":"10","hashOfConfig":"7"},{"size":1466,"mtime":1606846274539,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nugzt6",{"filePath":"14","messages":"15","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":1,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\derek\\Desktop\\BigBlueBadgeProjects\\blue-badge-client\\src\\index.js",[],"C:\\Users\\derek\\Desktop\\BigBlueBadgeProjects\\blue-badge-client\\src\\App.js",["23"],"C:\\Users\\derek\\Desktop\\BigBlueBadgeProjects\\blue-badge-client\\src\\Components\\Rating\\RatingCreate.jsx",["24","25","26","27"],"import React, {useState, useEffect} from 'react';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst RatingCreate = (props) => {\r\n    const [rating, setRating] = useState('');\r\n    const [movieId, setMovieId] = useState('');\r\n    const [userId, setUserId] = useState('');\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        fetch('http://localhost:3000/ratings/createrating/', {\r\n            method: 'POST',\r\n            body: JSON.stringify({rating, movieId, userId}),\r\n            headers: new Headers ({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': props.token\r\n            })\r\n        })\r\n        .then((res) => res.json())\r\n        .then((ratingData) => {\r\n            console.log(ratingData);\r\n            setRating(''),\r\n            setMovieId(''),\r\n            setUserId(''),\r\n            props.fetchRating();\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <div>\r\n                <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n                    <Rating name=\"customized-10\" value={rating} defaultValue={0} max={10} onClick={(e) => setRating(e.target.value)}/>\r\n                </Box>\r\n            <form>\r\n                <label htmlFor=\"movieId\">Movie ID</label>\r\n                <input type=\"text\" name=\"movieId\" value={movieId} onChange={(e) => setMovieId(e.target.value)}></input>\r\n                <br/>\r\n                <label htmlFor=\"userId\">User ID</label>\r\n                <input type=\"text\" name=\"movieId\" value={userId} onChange={(e) => setUserId(e.target.value)}></input>\r\n                <br/>\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default RatingCreate","C:\\Users\\derek\\Desktop\\BigBlueBadgeProjects\\blue-badge-client\\src\\Components\\Auth\\Auth.jsx",["28","29","30","31"],"C:\\Users\\derek\\Desktop\\BigBlueBadgeProjects\\blue-badge-client\\src\\Components\\Auth\\Login.js",[],{"ruleId":null,"fatal":true,"severity":2,"message":"32","line":9,"column":8},{"ruleId":"33","severity":1,"message":"34","line":1,"column":26,"nodeType":"35","messageId":"36","endLine":1,"endColumn":35},{"ruleId":"33","severity":1,"message":"37","line":9,"column":11,"nodeType":"35","messageId":"36","endLine":9,"endColumn":23},{"ruleId":"38","severity":2,"message":"39","line":22,"column":13,"nodeType":"40","messageId":"41","endLine":25,"endColumn":33},{"ruleId":"42","severity":1,"message":"43","line":22,"column":26,"nodeType":"44","messageId":"45","endLine":22,"endColumn":27},{"ruleId":"33","severity":1,"message":"37","line":14,"column":11,"nodeType":"35","messageId":"36","endLine":14,"endColumn":23},{"ruleId":"33","severity":1,"message":"46","line":39,"column":15,"nodeType":"35","messageId":"36","endLine":39,"endColumn":20},{"ruleId":"33","severity":1,"message":"47","line":43,"column":15,"nodeType":"35","messageId":"36","endLine":43,"endColumn":26},{"ruleId":"33","severity":1,"message":"48","line":52,"column":12,"nodeType":"35","messageId":"36","endLine":52,"endColumn":24},"Parsing error: Identifier 'Auth' has already been declared\n\n   7 | import TopRated from './Components/TopRated';\n   8 | import SignUp from './Components/SignUp';\n>  9 | import Auth from './Components/Auth/Auth'\n     |        ^\n  10 | \n  11 | \n  12 |","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'handleSubmit' is assigned a value but never used.","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'title' is assigned a value but never used.","'loginToggle' is assigned a value but never used.","'signupFields' is assigned a value but never used."]